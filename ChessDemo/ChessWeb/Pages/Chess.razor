@page "/Chess"
@using ChessCommon
@using ChessCommon.Models
@using System.Diagnostics
@using System.Text;
<PageTitle>Chess</PageTitle>

@inject ChessService chessService
@inject IChessEngine chessEngine

<head>
    <title></title>
    <meta charset="UTF-8">
    <style>
        .chess-info {
            margin-bottom: 20px;
            padding: 5px
        }
        .chess-board { border-spacing: 0; border-collapse: collapse; }
        .chess-board th { padding: .5em; }
        .chess-board td { border: 1px solid;  }
        .chess-board .light { background: #eee; }

            .chess-board .dark {
                background: #75abbc;
            }



    </style>

    <script>
        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("Text", ev.target.id);
        }

        function drop(ev) {
            let data = ev.dataTransfer.getData("Text");
            ev.target.appendChild(document.getElementById(data));
            ev.preventDefault();
        }
    </script>
</head>
<body>

    <div>

        <div style="padding: 5px; float:left;width:450px">
                <div style="margin-bottom: 10px; padding: 5px;clear:both">
                @Info
                </div>



        <div class="accordion" id="accordionExample">
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingOne">
      <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
        Play
      </button>
    </h2>
    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
      <div class="accordion-body">
                <div style="clear:both">
                    <div style="float:left">
                        <b>AutoPlay   </b>
                     </div>
                    <div style="float:left;margin-left: 10px">
                                    <input type="radio" id="autoPlay" name="drone" @onclick="() => isAutoPay = true" value="huey" checked />
                        <label for="autoPlay">Enable</label>
                        <input type="radio" id="disableAutoPlay" name="drone" value="dewey" @onclick="() => isAutoPay = false" />
                        <label for="disableAutoPlay">Disable</label>
                    </div>
                </div>

                <div style="padding-top:10px;clear:both">
                    <button class="btn btn-primary btn-sm" @onclick="Play">  Play </button>
                    <button @onclick="() => chessEngine.TryGetNextMove()" class="btn btn-outline-info btn-sm">Next Move</button>
                    <button @onclick="() => chessEngine.TryGetPrevMove()" class="btn btn-outline-info btn-sm">Prev Move</button>
                </div>
      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingTwo">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
        Evaluate
      </button>
    </h2>
    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
      <div class="accordion-body">
             <div style="margin-bottom: 10px; clear:both">
                            <button @onclick="EvaluateMove" class="btn btn-primary btn-sm"> Evaluate (@depth)  </button>
                                <button @onclick="() => depth++" class="btn btn-outline-info btn-sm">Up</button>
                                @depth
                                <button @onclick="() => depth--" class="btn btn-outline-info btn-sm">Down</button>
                        </div>
                        <div style="margin-bottom: 5px; clear:both">  Move Position:  @movePosition    </div>
                        <div style="margin-bottom: 5px; clear:both">  Move Value:  @moveValue  (@moveCounter)  </div>
                        <div style="margin-bottom: 5px; clear:both">  Move Time:  @moveTime </div>
                   </div>
                   </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingThree">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
        Info
      </button>
    </h2>
    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
      <div class="accordion-body">
             <table class="table">
                                <thead class="thead-dark">
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">White</th>
                                        <th scope="col">Black</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <th scope="row">Current Player</th>
                                        <td>@isCurrentPlayer(PieceColor.White)</td>
                                        <td>@isCurrentPlayer(PieceColor.Black)</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Check</th>
                                        <td>@isWhiteCheck</td>
                                        <td>@isBlackCheck</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Mate</th>
                                        <td>@isWhiteMate</td>
                                        <td>@isBlackMate</td>
                                    </tr>
                                <tr>
                                        <th scope="row">Left-Castle</th>
                                    <td>@chessEngine.WhiteCastlingState.IsLeftCastlingEnabled</td>
                                    <td>@chessEngine.BlackCastlingState.IsLeftCastlingEnabled</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Right-Castle</th>
                                    <td>@chessEngine.WhiteCastlingState.IsRightCastlingEnabled</td>
                                    <td>@chessEngine.BlackCastlingState.IsRightCastlingEnabled</td>
                                    </tr>
                                </tbody>
                            </table>
      </div>
    </div>
  </div>

   <div class="accordion-item">
    <h2 class="accordion-header" id="headingFour">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
        Save\Load Game
      </button>
    </h2>
    <div id="collapseFour" class="accordion-collapse collapse" aria-labelledby="headingFour" data-bs-parent="#accordionExample">
      <div class="accordion-body">
            <div id="collapseSaveLoad" class=" chess-info" style="clear:both">
                Save/Load
                <div class=" chess-info" style="clear:both">
                    <button class="btn btn-primary  btn-sm" @onclick="LoadPgn">
                        LoadPgn
                    </button>

                     <input type="text" @bind="pgnStr" placeholder="" />

                     <button class="btn btn-primary  btn-sm" @onclick="ResetPgnMoves">
                        Reset
                    </button>
                  </div>


                 <div class=" chess-info" style="clear:both">
                    <button class="btn btn-primary  btn-sm" @onclick="SaveBoard">
                        Save
                    </button>
                <input type="text" @bind="csvFile" placeholder="" />
             
                  </div>
                  <div class=" chess-info" style="clear:both">
                                <div style="padding-top:10px;clear:both">
                                    <button @onclick="() => chessEngine.ExportPgn(pgnFileName)" class="btn btn-outline-info btn-sm">Export</button>
                                    <input type="text" @bind="pgnFileName" placeholder="" />
                                </div>
                <button class="btn btn-primary  btn-sm" @onclick="FindGames">
                    Find
                </button>
                  <input type="text" @bind="gameFilter" placeholder="" />
                </div>
                  <div style="clear:both">
                                <table class="table">

                                    <tbody>
                                        @foreach (var game in gameList)
                                        {
                                            <tr>
                                                <td>@game</td>
                                                <td>
                                                    <button type="button" @onclick="()=> DeleteGame(game)" class="btn btn-danger">Delete</button>
                                                    <button type="button" @onclick="()=> LoadGame(game)" class="btn btn-warning">Load</button>
                                               </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>




                </div>


            </div>
      </div>
    </div>


  </div>

            <div class="accordion-item">
                <h2 class="accordion-header" id="headingFive">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
                        Game moves
                    </button>
                </h2>
                <div id="collapseFive" class="accordion-collapse collapse" aria-labelledby="headingFive" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <div id="collapseSaveLoad" class=" chess-info" style="clear:both">
                            <div style="clear:both">
                                <table class="table">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th scope="col">ID</th>
                                            <th scope="col">White</th>
                                            <th scope="col">Black</th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @for (int i = 0; i < moves.Count; i+=2)
                                        {
                                            <tr>
                                                <td>@(i/2 + 1)</td>
                                                <td>@moves[i]</td>
                                                <td>@(moves.Count>i + 1 ? @moves[i + 1] : "")</td> 
                                            </tr>
                                        }
                                    </tbody>
                                </table>




                            </div>

                        </div>
                    </div>
                </div>


            </div>



</div>

        <div>         <H1> @(isMate ? "Mate" : "") </H1></div>
        <div style="margin-bottom: 46px;border: blue;  border-width: 5px;   border-style: solid; padding: 5px; float:left">

            <table class="chess-board">
                <tbody>

                    @for (var y = 0; y < Board.MAX_COLS; y++)
                    {
                                <tr>
                                    <td>@(8 - y)</td>
                            @for (char c = 'a'; c <= 'h'; c++)
                            {
                                int x = CommonUtils.PositionFromFile(c);

                                Position position = new Position(c + (8 - y).ToString());
                                string className = (y + x) % 2 == 0 ? "light" : "dark";
                                Piece? piece = chessEngine.GetPiece(position);

                                                <td draggable="true"
                                                    ondragover="allowDrop(event)"
                                                    @ondragstart="@(e => HandleDragEnter(e,position))"
                                                    @ondrop="@(e => HandleDragDroped(e,position))"
                                                    width="70px" height="70px" style="font-size:40px; text-align:center;" class="@className">
                                    @ChessService.GetIcon(piece)
                                                </td>
                            }



                                </tr>
                    }
                    <tr>
                        <th> </th>
                        <th>a </th>
                        <th>b</th>
                        <th>c</th>
                        <th>d</th>
                        <th>e</th>
                        <th>f</th>
                        <th>g</th>
                        <th>h</th>
                    </tr>
                </tbody>
            </table>
            </div>

    </div>

</body>


